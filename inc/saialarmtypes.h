/**
 * Copyright (c) 20XX Microsoft Open Technologies, Inc.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License"); you may
 *    not use this file except in compliance with the License. You may obtain
 *    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 *    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
 *    CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
 *    LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS
 *    FOR A PARTICULAR PURPOSE, MERCHANTABILITY OR NON-INFRINGEMENT.
 *
 *    See the Apache Version 2.0 License for specific language governing
 *    permissions and limitations under the License.
 *
 *    Microsoft would like to thank the following companies for their review and
 *    assistance with these files: Intel Corporation, Mellanox Technologies Ltd,
 *    Dell Products, L.P., Facebook, Inc., Marvell International Ltd.
 *
 * @file    saialarmtypes.h
 * @brief   This module defines SAI alarm types
 */

#if !defined(__SAIALARMTYPES_H_)
#define __SAIALARMTYPES_H_

#include <saitypes.h>

/**
 * @defgroup SAIALARMTYPES SAI - Alarm types definitions
 *
 * @{
 */

/**
 * @brief Alarm type of the switch
 */
typedef enum _sai_alarm_type_t
{
    SAI_ALARM_TYPE_BOARD_INIT,
    SAI_ALARM_TYPE_BOARD_READY,
    SAI_ALARM_TYPE_BOARD_REBOOT,
    SAI_ALARM_TYPE_BOARD_BOOT_FAILED,
    SAI_ALARM_TYPE_BOARD_HARD_FAILURE,
    SAI_ALARM_TYPE_BOARD_COMMUNICATION_FAILED,
    SAI_ALARM_TYPE_BOARD_MODE_SWITCH,

    SAI_ALARM_TYPE_UPGRADE_INPROGRESS,
    SAI_ALARM_TYPE_UPGRADE_DONE,
    SAI_ALARM_TYPE_UPGRADE_FAIL,

    SAI_ALARM_TYPE_TEMPERATURE_HIGH_ALARM,
    SAI_ALARM_TYPE_TEMPERATURE_HIGH_WARN,
    SAI_ALARM_TYPE_TEMPERATURE_LOW_ALARM,
    SAI_ALARM_TYPE_TEMPERATURE_LOW_WARN,

    SAI_ALARM_TYPE_PORT_LOOPBACK_TERMINAL,
    SAI_ALARM_TYPE_PORT_LOOPBACK_FACILITY,

    SAI_ALARM_TYPE_PORT_RX_LOL,
    SAI_ALARM_TYPE_PORT_RX_LOS,
    SAI_ALARM_TYPE_PORT_RX_LOW,
    SAI_ALARM_TYPE_PORT_RX_HIGH,

    SAI_ALARM_TYPE_PORT_TX_FAIL,
    SAI_ALARM_TYPE_PORT_TX_LOS,
    SAI_ALARM_TYPE_PORT_TX_LOW,
    SAI_ALARM_TYPE_PORT_TX_HIGH,
    SAI_ALARM_TYPE_PORT_TX_PWR_MISMATCH,

    SAI_ALARM_TYPE_TRANSCEIVER_FAILED,
    SAI_ALARM_TYPE_TRANSCEIVER_MISSING,
    SAI_ALARM_TYPE_TRANSCEIVER_UNSUPPORTED,
    SAI_ALARM_TYPE_TRANSCEIVER_MISMATCH,
    SAI_ALARM_TYPE_TRANSCEIVER_COMMUNICATION_FAILED,
    SAI_ALARM_TYPE_TRANSCEIVER_BIASCURRENT_HIGH,
    SAI_ALARM_TYPE_TRANSCEIVER_BIASCURRENT_LOW,
    SAI_ALARM_TYPE_TRANSCEIVER_VCC_HIGH,
    SAI_ALARM_TYPE_TRANSCEIVER_VCC_LOW,

    SAI_ALARM_TYPE_FLEXO_RX_SM_BIP8,
    SAI_ALARM_TYPE_FLEXO_RX_SM_BEI,
    SAI_ALARM_TYPE_FLEXO_RX_OTN_LOF,
    SAI_ALARM_TYPE_FLEXO_RX_OTN_OOF,
    SAI_ALARM_TYPE_FLEXO_RX_OTN_LOM,
    SAI_ALARM_TYPE_FLEXO_RX_OTN_OOM,
    SAI_ALARM_TYPE_FLEXO_RX_SM_BDI,
    SAI_ALARM_TYPE_FLEXO_RX_ODU_AIS,
    SAI_ALARM_TYPE_FLEXO_RX_ODU_LCK,
    SAI_ALARM_TYPE_FLEXO_RX_FEC_UNCORRECT,
    SAI_ALARM_TYPE_FLEXO_RX_FEC_SD,
    SAI_ALARM_TYPE_FLEXO_RX_FEC_SF,
    SAI_ALARM_TYPE_FLEXO_TX_FEC_SD,
    SAI_ALARM_TYPE_FLEXO_TX_FEC_SF,
    SAI_ALARM_TYPE_FLEXO_RX_ALGNMENT_ERR,
    SAI_ALARM_TYPE_FLEXO_RX_CD_DEG,
    SAI_ALARM_TYPE_FLEXO_RX_PDL_DEG,
    SAI_ALARM_TYPE_FLEXO_RX_PMD_DEG,
    SAI_ALARM_TYPE_FLEXO_RX_FOFF_DEG,
    SAI_ALARM_TYPE_FLEXO_RX_SOP_CHANGE_RATE_DEG,
    SAI_ALARM_TYPE_FLEXO_TX_FORCE_AIS,
    SAI_ALARM_TYPE_FLEXO_TX_FORCE_LCK,
    SAI_ALARM_TYPE_FLEXO_ABNORMAL_STATE,
    SAI_ALARM_TYPE_FLEXO_LINE_PRBS_ENABLE,
    SAI_ALARM_TYPE_FLEXO_LINE_RX_TTI_MISMATCH,
    SAI_ALARM_TYPE_FLEXO_TX_FORCE_OCI,
    SAI_ALARM_TYPE_FLEXO_RX_BER_FDD,
    SAI_ALARM_TYPE_FLEXO_RX_BER_FED,
    SAI_ALARM_TYPE_FLEXO_RX_GIDM,
    SAI_ALARM_TYPE_FLEXO_RX_LDI_LD,
    SAI_ALARM_TYPE_FLEXO_RX_LDI_RD,
    SAI_ALARM_TYPE_FLEXO_RX_LOFLOM,
    SAI_ALARM_TYPE_FLEXO_RX_PMM,
    SAI_ALARM_TYPE_FLEXO_RX_RPF,

    SAI_ALARM_TYPE_CLIENT_LASER_OFF_BY_ALS,
    SAI_ALARM_TYPE_CLIENT_LASER_OFF_BY_DISABLED,
    SAI_ALARM_TYPE_CLIENT_POWER_MODE_ERROR,
    SAI_ALARM_TYPE_CLIENT_SERDES_PRBS_ENABLE,
    SAI_ALARM_TYPE_CLIENT_MODULE_HOST_PRBS_ENABLE,
    SAI_ALARM_TYPE_CLIENT_MODULE_MEDIA_PRBS_ENABLE,
    SAI_ALARM_TYPE_CLIENT_RX_FEC_BER_SD_ALARM,
    SAI_ALARM_TYPE_CLIENT_RX_FEC_BER_SF_ALARM,

    SAI_ALARM_TYPE_GE_TX_FORCE_LF,
    SAI_ALARM_TYPE_GE_TX_FORCE_RF,
    SAI_ALARM_TYPE_GE_TX_FORCE_IDLE,
    SAI_ALARM_TYPE_GE_RX_NO_PACKET,
    SAI_ALARM_TYPE_GE_RX_LF,
    SAI_ALARM_TYPE_GE_TX_LF,
    SAI_ALARM_TYPE_GE_RX_RF,
    SAI_ALARM_TYPE_GE_TX_RF,
    SAI_ALARM_TYPE_GE_RX_BLK_LCK_FLT,
    SAI_ALARM_TYPE_GE_RX_AM_LCK_FLT,
    SAI_ALARM_TYPE_GE_TX_BLK_LCK_FLT,
    SAI_ALARM_TYPE_GE_TX_AM_LCK_FLT,
    SAI_ALARM_TYPE_GE_RX_PCS_ERR_FLT,
    SAI_ALARM_TYPE_GE_RX_PCS_BIP_FLT,
    SAI_ALARM_TYPE_GE_TX_PCS_ERR_FLT,
    SAI_ALARM_TYPE_GE_TX_PCS_BIP_FLT,
    SAI_ALARM_TYPE_GE_RX_PCS_LOA,
    SAI_ALARM_TYPE_GE_TX_PCS_LOA,
    SAI_ALARM_TYPE_GE_RX_PCS_HI_BER,
    SAI_ALARM_TYPE_GE_RX_LOSS_OF_SYNC,
    SAI_ALARM_TYPE_GE_TX_LOSS_OF_SYNC,

    SAI_ALARM_TYPE_OTUCN_IAE,
    SAI_ALARM_TYPE_OTUCN_LOFLOM,
    SAI_ALARM_TYPE_OTUCN_ODU_AIS,
    SAI_ALARM_TYPE_OTUCN_ODU_LCK,
    SAI_ALARM_TYPE_OTUCN_ODU_OCI,
    SAI_ALARM_TYPE_OTUCN_ODU_SD,
    SAI_ALARM_TYPE_OTUCN_OOF,
    SAI_ALARM_TYPE_OTUCN_OOM,
    SAI_ALARM_TYPE_OTUCN_OPU_AIS,
    SAI_ALARM_TYPE_OTUCN_OPU_CRC5,
    SAI_ALARM_TYPE_OTUCN_OPU_CRC8,
    SAI_ALARM_TYPE_OTUCN_OPU_CSF,
    SAI_ALARM_TYPE_OTUCN_OPU_LOCM,
    SAI_ALARM_TYPE_OTUCN_OPU_PLM,
    SAI_ALARM_TYPE_OTUCN_OTU_SD,
    SAI_ALARM_TYPE_OTUCN_PM_BDI,
    SAI_ALARM_TYPE_OTUCN_PM_BEI_ALARM,
    SAI_ALARM_TYPE_OTUCN_PM_BIP8_ALARM,
    SAI_ALARM_TYPE_OTUCN_PM_SSF,
    SAI_ALARM_TYPE_OTUCN_PM_TSF,
    SAI_ALARM_TYPE_OTUCN_SM_BDI,
    SAI_ALARM_TYPE_OTUCN_SM_BEI_ALARM,
    SAI_ALARM_TYPE_OTUCN_SM_BIAE,
    SAI_ALARM_TYPE_OTUCN_SM_BIP8_ALARM,
    SAI_ALARM_TYPE_OTUCN_SM_SSF,
    SAI_ALARM_TYPE_OTUCN_SM_TSF,

    SAI_ALARM_TYPE_OTN_AM_SF_0,
    SAI_ALARM_TYPE_OTN_AM_SF_2,
    SAI_ALARM_TYPE_OTN_ASSERTING_AM_SF_1,
    SAI_ALARM_TYPE_OTN_IAE,
    SAI_ALARM_TYPE_OTN_LOFLOM,
    SAI_ALARM_TYPE_OTN_LRC,
    SAI_ALARM_TYPE_OTN_ODU_AIS,
    SAI_ALARM_TYPE_OTN_ODU_LCK,
    SAI_ALARM_TYPE_OTN_ODU_OCI,
    SAI_ALARM_TYPE_OTN_ODU_SD,
    SAI_ALARM_TYPE_OTN_OOF,
    SAI_ALARM_TYPE_OTN_OOM,
    SAI_ALARM_TYPE_OTN_OPU_AIS,
    SAI_ALARM_TYPE_OTN_OPU_CRC5,
    SAI_ALARM_TYPE_OTN_OPU_CRC8,
    SAI_ALARM_TYPE_OTN_OPU_CSF,
    SAI_ALARM_TYPE_OTN_OPU_LOCM,
    SAI_ALARM_TYPE_OTN_OPU_PLM,
    SAI_ALARM_TYPE_OTN_OTU_SD,
    SAI_ALARM_TYPE_OTN_PM_BDI,
    SAI_ALARM_TYPE_OTN_PM_BEI_ALARM,
    SAI_ALARM_TYPE_OTN_PM_BIP8_ALARM,
    SAI_ALARM_TYPE_OTN_PM_SSF,
    SAI_ALARM_TYPE_OTN_PM_TSF,
    SAI_ALARM_TYPE_OTN_RECEIVE_CDL_1,
    SAI_ALARM_TYPE_OTN_SM_BDI,
    SAI_ALARM_TYPE_OTN_SM_BEI_ALARM,
    SAI_ALARM_TYPE_OTN_SM_BIAE,
    SAI_ALARM_TYPE_OTN_SM_BIP8_ALARM,
    SAI_ALARM_TYPE_OTN_SM_SSF,
    SAI_ALARM_TYPE_OTN_SM_TSF,

    SAI_ALARM_TYPE_OLP_SWITCH_TO_PRIMARY,
    SAI_ALARM_TYPE_OLP_SWITCH_TO_SECONDARY,
    SAI_ALARM_TYPE_OLP_FORCE_TO_PRIMARY,
    SAI_ALARM_TYPE_OLP_FORCE_TO_SECONDARY,

    SAI_ALARM_TYPE_EDFA_SATURATED,
    SAI_ALARM_TYPE_EDFA_GAIN_LOW,
    SAI_ALARM_TYPE_EDFA_CURRENT_HIGH,
    SAI_ALARM_TYPE_EDFA_PUMP_TEMP_ABNORMAL,
    SAI_ALARM_TYPE_EDFA_APR_TRIGGER,
    SAI_ALARM_TYPE_EDFA_TARGET_POWER_NOT_REACHABLE,

    SAI_ALARM_TYPE_OTDR_SCAN_FAILED,
    SAI_ALARM_TYPE_OTDR_LENGTH_BENEATH,
    SAI_ALARM_TYPE_OTDR_LOSS_EXCEED,
    SAI_ALARM_TYPE_OTDR_SPAN_DISTANCE_CHANGE,
    SAI_ALARM_TYPE_OTDR_SPAN_DISTANCE_BASELINE_CHANGE,
    SAI_ALARM_TYPE_OTDR_SPAN_LOSS_CHANGE,
    SAI_ALARM_TYPE_OTDR_SPAN_LOSS_BASELINE_CHANGE,

    SAI_ALARM_TYPE_MEDIACHANNEL_MISMATCH,
    SAI_ALARM_TYPE_MEDIACHANNEL_MISSING,
    SAI_ALARM_TYPE_MEDIACHANNEL_TARGETPOWER_OUTOFREACH,
    SAI_ALARM_TYPE_MEDIACHANNEL_INPUT_LOS,
    SAI_ALARM_TYPE_MEDIACHANNEL_ASE_LOAD,
    SAI_ALARM_TYPE_ASE_TARGET_PSD_NOT_REACHABLE,

    SAI_ALARM_TYPE_MAX,
} sai_alarm_type_t;

/**
 * @brief Alarm status
 */
typedef enum _sai_alarm_status_t
{
    SAI_ALARM_STATUS_ACTIVE,    /**< Alarm is active */
    SAI_ALARM_STATUS_INACTIVE,  /**< Alarm is inactive */
    SAI_ALARM_STATUS_TRANSIENT, /**< Alarm is transient */
    SAI_ALARM_STATUS_MAX,       /**< Number of alarm states */
} sai_alarm_status_t;

/**
 * @brief Alarm severity
 */
typedef enum _sai_alarm_severity_t
{
    SAI_ALARM_SEVERITY_UNKNOWN,  /**< Unknown */
    SAI_ALARM_SEVERITY_CLEARED,  /**< Cleared */
    SAI_ALARM_SEVERITY_MINOR,    /**< Minor */
    SAI_ALARM_SEVERITY_WARNING,  /**< Warning */
    SAI_ALARM_SEVERITY_MAJOR,    /**< Major */
    SAI_ALARM_SEVERITY_CRITICAL, /**< Critical */
} sai_alarm_severity_t;

/**
 * @brief Structure for alarm info
 */
typedef struct _sai_alarm_info_t
{
    /**
     * @brief Status
     */
    sai_alarm_status_t status;

    /**
     * @brief Time created
     */
    uint64_t time_created;

    /**
     * @brief Text
     */
    sai_s8_list_t text;

    /**
     * @brief Resource object id
     */
    sai_object_id_t resource_oid;

    /**
     * @brief Severity
     */
    sai_alarm_severity_t severity;

} sai_alarm_info_t;

/**
 * @}
 */
#endif /** __SAIALARMTYPES_H_ */
